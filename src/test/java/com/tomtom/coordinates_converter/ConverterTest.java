package com.tomtom.coordinates_converter;


import org.junit.Test;

import static com.tomtom.coordinates_converter.GeometryType.*;
import static org.junit.Assert.assertEquals;

public class ConverterTest {

    private Converter converter = new Converter();

    @Test
    public void convertFromCodeDBCoordinates() {
        converter.convertCoordinates("[-750012700,622664710],[-749864320,622653590]", null);
        assertEquals("(-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getWgsCoordinates());
        assertEquals("LINESTRING (-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getWktCoordinates());
        assertEquals("[-750012700,622664710],[-749864320,622653590]", converter.getCoreDBCoordinates());
        assertEquals("[-750012700,622664710],[-749864320,622653590]", converter.getOriginalCoordinates());
        assertEquals(780,converter.getLength());
    }

    @Test
    public void checkFromCodeDBCoordinatesWithChangeOrder() {
        converter.convertCoordinates("[-750012700,622664710],[-749864320,622653590]", "change");
        assertEquals("(62.2664710 -75.0012700, 62.2653590 -74.9864320)", converter.getWgsCoordinates());
        assertEquals("LINESTRING (62.2664710 -75.0012700, 62.2653590 -74.9864320)", converter.getWktCoordinates());
        assertEquals("[622664710,-750012700],[622653590,-749864320]", converter.getCoreDBCoordinates());
        assertEquals("[-750012700,622664710],[-749864320,622653590]", converter.getOriginalCoordinates());
        assertEquals(1656,converter.getLength());
    }

    @Test
    public void convertFromXMLCoordinates() {
        converter.convertCoordinates("[-750012700,622664710] [-749864320,622653590]", null);
        assertEquals("(-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getWgsCoordinates());
        assertEquals("LINESTRING (-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getWktCoordinates());
        assertEquals("[-750012700,622664710],[-749864320,622653590]", converter.getCoreDBCoordinates());
        assertEquals("[-750012700,622664710] [-749864320,622653590]", converter.getOriginalCoordinates());
        assertEquals(780,converter.getLength());
    }

    @Test
    public void checkFromXMLCoordinatesWithChangeOrder() {
        converter.convertCoordinates("[-750012700,622664710] [-749864320,622653590]", "change");
        assertEquals("(62.2664710 -75.0012700, 62.2653590 -74.9864320)", converter.getWgsCoordinates());
        assertEquals("LINESTRING (62.2664710 -75.0012700, 62.2653590 -74.9864320)", converter.getWktCoordinates());
        assertEquals("[622664710,-750012700],[622653590,-749864320]", converter.getCoreDBCoordinates());
        assertEquals("[-750012700,622664710] [-749864320,622653590]", converter.getOriginalCoordinates());
        assertEquals(1656,converter.getLength());
    }

    @Test
    public void convertFromWGSCoordinates() {
        converter.convertCoordinates("(-75.0012700 62.2664710, -74.9864320 62.2653590)", null);
        assertEquals("(-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getWgsCoordinates());
        assertEquals("LINESTRING (-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getWktCoordinates());
        assertEquals("[-750012700,622664710],[-749864320,622653590]", converter.getCoreDBCoordinates());
        assertEquals("(-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getOriginalCoordinates());
        assertEquals(780,converter.getLength());
    }

    @Test
    public void checkFromWGSCoordinatesWithChangeOrder() {
        converter.convertCoordinates("(-75.0012700 62.2664710, -74.9864320 62.2653590)", "change");
        assertEquals("(62.2664710 -75.0012700, 62.2653590 -74.9864320)", converter.getWgsCoordinates());
        assertEquals("LINESTRING (62.2664710 -75.0012700, 62.2653590 -74.9864320)", converter.getWktCoordinates());
        assertEquals("[622664710,-750012700],[622653590,-749864320]", converter.getCoreDBCoordinates());
        assertEquals("(-75.0012700 62.2664710, -74.9864320 62.2653590)", converter.getOriginalCoordinates());
        assertEquals(1656,converter.getLength());
    }

    @Test
    public void geometryTypeTest() {
        converter.convertCoordinates("[[[[194804197,517107112],[194804495,517107629],[194805121,517107833],[194805985,517108368],[194806462,517109273],[194806939,517110344],[194807654,517111027],[194808458,517111378],[194809502,517111544],[194821332,517109618],[194839440,517107057],[194844945,517106333],[194846149,517106768],[194846973,517108216],[194855575,517108725],[194857609,517108158],[194859901,517108930],[194863249,517109394],[194868142,517109317],[194870742,517108222],[194871270,517107984],[194872083,517107617],[194867550,517106072],[194866030,517104295],[194866520,517102543],[194865515,517101565],[194853617,517099504],[194847358,517098859],[194836360,517099554],[194824127,517101279],[194806909,517102810],[194805925,517104619],[194805240,517105506],[194804614,517106226],[194804078,517106595],[194804197,517107112]],[[194850471,517106339],[194850895,517105310],[194852965,517105047],[194855048,517104829],[194856395,517104658],[194857015,517104417],[194859495,517103488],[194861043,517103526],[194864521,517104590],[194864716,517106329],[194863472,517106968],[194861936,517107656],[194859327,517107908],[194856810,517107919],[194855895,517107805],[194852360,517107393],[194850471,517106339]]],[[[194855218,517125738],[194855003,517124186],[194854788,517122823],[194854654,517121743],[194854440,517121277],[194853984,517120879],[194853340,517120529],[194852508,517120330],[194851328,517120164],[194850577,517119964],[194849933,517119765],[194849477,517119482],[194849048,517119017],[194842197,517119405],[194845086,517121598],[194846635,517122576],[194847738,517123278],[194848573,517123610],[194849645,517123777],[194850867,517123924],[194851732,517124183],[194853252,517124940],[194855218,517125738]]]]", null);
        assertEquals(MULTIPOLYGON.enumValue.trim(), converter.getWktCoordinates().substring(0, 12));
        converter.convertCoordinates("[[[194804197,517107112],[194804495,517107629],[194805121,517107833],[194805985,517108368],[194806462,517109273],[194806939,517110344],[194807654,517111027],[194808458,517111378],[194809502,517111544],[194821332,517109618],[194839440,517107057],[194844945,517106333],[194846149,517106768],[194846973,517108216],[194855575,517108725],[194857609,517108158],[194859901,517108930],[194863249,517109394],[194868142,517109317],[194870742,517108222],[194871270,517107984],[194872083,517107617],[194867550,517106072],[194866030,517104295],[194866520,517102543],[194865515,517101565],[194853617,517099504],[194847358,517098859],[194836360,517099554],[194824127,517101279],[194806909,517102810],[194805925,517104619],[194805240,517105506],[194804614,517106226],[194804078,517106595],[194804197,517107112]],[[194850471,517106339],[194850895,517105310],[194852965,517105047],[194855048,517104829],[194856395,517104658],[194857015,517104417],[194859495,517103488],[194861043,517103526],[194864521,517104590],[194864716,517106329],[194863472,517106968],[194861936,517107656],[194859327,517107908],[194856810,517107919],[194855895,517107805],[194852360,517107393],[194850471,517106339]]]", null);
        assertEquals(POLYGON.enumValue.trim(), converter.getWktCoordinates().substring(0, 7));
        converter.convertCoordinates("[[[194804197,517107112],[194804495,517107629],[194805121,517107833],[194805985,517108368],[194806462,517109273],[194806939,517110344],[194807654,517111027],[194808458,517111378],[194809502,517111544],[194821332,517109618],[194839440,517107057],[194844945,517106333],[194846149,517106768],[194846973,517108216],[194855575,517108725],[194857609,517108158],[194859901,517108930],[194863249,517109394],[194868142,517109317],[194870742,517108222],[194871270,517107984],[194872083,517107617],[194867550,517106072],[194866030,517104295],[194866520,517102543],[194865515,517101565],[194853617,517099504],[194847358,517098859],[194836360,517099554],[194824127,517101279],[194806909,517102810],[194805925,517104619],[194805240,517105506],[194804614,517106226],[194804078,517106595],[194804197,517107113]],[[194850471,517106339],[194850895,517105310],[194852965,517105047],[194855048,517104829],[194856395,517104658],[194857015,517104417],[194859495,517103488],[194861043,517103526],[194864521,517104590],[194864716,517106329],[194863472,517106968],[194861936,517107656],[194859327,517107908],[194856810,517107919],[194855895,517107805],[194852360,517107393],[194850471,517106334]]]", null);
        assertEquals(MULTILINESTRING.enumValue.trim(), converter.getWktCoordinates().substring(0, 15));
        converter.convertCoordinates("[[194804197,517107112],[194804495,517107629],[194805121,517107833],[194805985,517108368],[194806462,517109273],[194806939,517110344],[194807654,517111027],[194808458,517111378],[194809502,517111544],[194821332,517109618],[194839440,517107057],[194844945,517106333],[194846149,517106768],[194846973,517108216],[194855575,517108725],[194857609,517108158],[194859901,517108930],[194863249,517109394],[194868142,517109317],[194870742,517108222],[194871270,517107984],[194872083,517107617],[194867550,517106072],[194866030,517104295],[194866520,517102543],[194865515,517101565],[194853617,517099504],[194847358,517098859],[194836360,517099554],[194824127,517101279],[194806909,517102810],[194805925,517104619],[194805240,517105506],[194804614,517106226],[194804078,517106595],[194804199,517107113]]", null);
        assertEquals(LINESTRING.enumValue.trim(), converter.getWktCoordinates().substring(0, 10));
        converter.convertCoordinates("[[194804197,517107112]]", null);
        assertEquals(POINT.enumValue.trim(), converter.getWktCoordinates().substring(0, 5));
    }
}